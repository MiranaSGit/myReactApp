variables:
  APP_REPO_NAME: "react-demo"
  AWS_REGION: "us-east-1"
stages:
  - Build
  - Push to ECR
  - Deploy
  - Remove
build:
  stage: Build
  tags:
    - runner
  when: manual
  script:
    - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
    - export ECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
    - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
    - git clone https://github.com/MiranaSGit/myReactApp.git
    - cd myReactApp
    - docker build --force-rm -t ${ECR_REGISTRY}/${APP_REPO_NAME} .
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${ECR_REGISTRY}
Push to ECR:
  stage: Push to ECR
  tags:
    - runner
  when: manual
  script:
    - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
    - export ECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
    - docker push ${ECR_REGISTRY}/${APP_REPO_NAME}
deploy:
  stage: Deploy
  tags:
    - runner
  when: manual
  script:
    - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
    - export ECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
    - git clone https://github.com/MiranaSGit/myReactApp.git
    - cp -R myReactApp/ecs-alb /tmp && cd /tmp/ecs-alb
    - terraform init
    - terraform apply -var "image=${ECR_REGISTRY}/${APP_REPO_NAME}" -auto-approve
remove:
  stage: Remove
  tags:
    - runner
  when: manual
  script:
    - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
    - export ECR_REGISTRY=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
    - cd /tmp/ecs-alb
    - terraform destroy -var "image=${ECR_REGISTRY}/${APP_REPO_NAME}" -auto-approve
